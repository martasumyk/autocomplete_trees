{"ast":null,"code":"var _jsxFileName = \"/Users/shumskyjury/Desktop/autocomplete_trees/client/src/components/autocomplete-suggestions/autocomplete-suggestions.tsx\";\nimport React from 'react';\nimport './autocomplete-suggestions.css';\nimport SuggestionItem from \"../suggestion-item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutocompleteSuggestions = _ref => {\n  let {\n    suggestions = [],\n    word = \"\"\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"suggestions\",\n    children: !suggestions.length ? /*#__PURE__*/_jsxDEV(\"small\", {\n      children: word ? `Unknown word ${word}` : \"Start entering a word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"suggestions-list\",\n      children: suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(SuggestionItem, {\n        word: suggestion\n      }, suggestion, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = AutocompleteSuggestions;\nexport default AutocompleteSuggestions;\nvar _c;\n$RefreshReg$(_c, \"AutocompleteSuggestions\");","map":{"version":3,"names":["React","SuggestionItem","jsxDEV","_jsxDEV","AutocompleteSuggestions","_ref","suggestions","word","id","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","suggestion","_c","$RefreshReg$"],"sources":["/Users/shumskyjury/Desktop/autocomplete_trees/client/src/components/autocomplete-suggestions/autocomplete-suggestions.tsx"],"sourcesContent":["import React from 'react';\nimport './autocomplete-suggestions.css';\nimport SuggestionItem from \"../suggestion-item\";\n\ninterface Props {\n    suggestions: string[],\n    word: string\n}\n\nconst AutocompleteSuggestions: React.FC<Props> = ({suggestions = [], word = \"\"}) => {\n  return (\n    <div id=\"suggestions\">\n      {\n        !suggestions.length ?\n          <small>{word ? `Unknown word ${word}` : \"Start entering a word\"}</small> :\n          <ul id=\"suggestions-list\">\n            {\n              suggestions.map((suggestion) =>\n                <SuggestionItem\n                  key={suggestion}\n                  word={suggestion}\n                />)\n            }\n          </ul>\n      }\n    </div>\n  );\n};\n\nexport default AutocompleteSuggestions;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gCAAgC;AACvC,OAAOC,cAAc,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOhD,MAAMC,uBAAwC,GAAGC,IAAA,IAAmC;EAAA,IAAlC;IAACC,WAAW,GAAG,EAAE;IAAEC,IAAI,GAAG;EAAE,CAAC,GAAAF,IAAA;EAC7E,oBACEF,OAAA;IAAKK,EAAE,EAAC,aAAa;IAAAC,QAAA,EAEjB,CAACH,WAAW,CAACI,MAAM,gBACjBP,OAAA;MAAAM,QAAA,EAAQF,IAAI,GAAI,gBAAeA,IAAK,EAAC,GAAG;IAAuB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBACxEX,OAAA;MAAIK,EAAE,EAAC,kBAAkB;MAAAC,QAAA,EAErBH,WAAW,CAACS,GAAG,CAAEC,UAAU,iBACzBb,OAAA,CAACF,cAAc;QAEbM,IAAI,EAAES;MAAW,GADZA,UAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEV,CAAC;AAACG,EAAA,GAlBIb,uBAAwC;AAoB9C,eAAeA,uBAAuB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}